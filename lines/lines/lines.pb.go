// Code generated by protoc-gen-go.
// source: lines.proto
// DO NOT EDIT!

/*
Package lines is a generated protocol buffer package.

It is generated from these files:
	lines.proto

It has these top-level messages:
	StatusRequest
	StatusReply
*/
package lines

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message
type StatusRequest struct {
	X int32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
}

func (m *StatusRequest) Reset()                    { *m = StatusRequest{} }
func (m *StatusRequest) String() string            { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()               {}
func (*StatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *StatusRequest) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *StatusRequest) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

// The response message
type StatusReply struct {
	Table  []int32 `protobuf:"varint,1,rep,packed,name=table" json:"table,omitempty"`
	Active bool    `protobuf:"varint,2,opt,name=active" json:"active,omitempty"`
	X      int32   `protobuf:"varint,3,opt,name=x" json:"x,omitempty"`
	Y      int32   `protobuf:"varint,4,opt,name=y" json:"y,omitempty"`
}

func (m *StatusReply) Reset()                    { *m = StatusReply{} }
func (m *StatusReply) String() string            { return proto.CompactTextString(m) }
func (*StatusReply) ProtoMessage()               {}
func (*StatusReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *StatusReply) GetTable() []int32 {
	if m != nil {
		return m.Table
	}
	return nil
}

func (m *StatusReply) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *StatusReply) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *StatusReply) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func init() {
	proto.RegisterType((*StatusRequest)(nil), "lines.StatusRequest")
	proto.RegisterType((*StatusReply)(nil), "lines.StatusReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Update service

type UpdateClient interface {
	// Sends a greeting
	UpdateTable(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusReply, error)
}

type updateClient struct {
	cc *grpc.ClientConn
}

func NewUpdateClient(cc *grpc.ClientConn) UpdateClient {
	return &updateClient{cc}
}

func (c *updateClient) UpdateTable(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusReply, error) {
	out := new(StatusReply)
	err := grpc.Invoke(ctx, "/lines.Update/UpdateTable", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Update service

type UpdateServer interface {
	// Sends a greeting
	UpdateTable(context.Context, *StatusRequest) (*StatusReply, error)
}

func RegisterUpdateServer(s *grpc.Server, srv UpdateServer) {
	s.RegisterService(&_Update_serviceDesc, srv)
}

func _Update_UpdateTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpdateServer).UpdateTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lines.Update/UpdateTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpdateServer).UpdateTable(ctx, req.(*StatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Update_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lines.Update",
	HandlerType: (*UpdateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateTable",
			Handler:    _Update_UpdateTable_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lines.proto",
}

func init() { proto.RegisterFile("lines.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0xc9, 0xcc, 0x4b,
	0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0xb4, 0xb9, 0x78, 0x83,
	0x4b, 0x12, 0x4b, 0x4a, 0x8b, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x78, 0xb8, 0x18,
	0x2b, 0x24, 0x18, 0x15, 0x18, 0x35, 0x58, 0x83, 0x18, 0x2b, 0x40, 0xbc, 0x4a, 0x09, 0x26, 0x08,
	0xaf, 0x52, 0x29, 0x9c, 0x8b, 0x1b, 0xa6, 0xb8, 0x20, 0xa7, 0x52, 0x48, 0x84, 0x8b, 0xb5, 0x24,
	0x31, 0x29, 0x27, 0x55, 0x82, 0x51, 0x81, 0x59, 0x83, 0x35, 0x08, 0xc2, 0x11, 0x12, 0xe3, 0x62,
	0x4b, 0x4c, 0x2e, 0xc9, 0x2c, 0x4b, 0x05, 0xeb, 0xe3, 0x08, 0x82, 0xf2, 0x20, 0x06, 0x33, 0xa3,
	0x18, 0xcc, 0x02, 0x35, 0xd8, 0xc8, 0x99, 0x8b, 0x2d, 0xb4, 0x20, 0x25, 0xb1, 0x24, 0x55, 0xc8,
	0x92, 0x8b, 0x1b, 0xc2, 0x0a, 0x01, 0x1b, 0x26, 0xa2, 0x07, 0x71, 0x33, 0x8a, 0x1b, 0xa5, 0x84,
	0xd0, 0x44, 0x0b, 0x72, 0x2a, 0x95, 0x18, 0x92, 0xd8, 0xc0, 0x1e, 0x33, 0x06, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x1d, 0x2f, 0x65, 0xc6, 0xe7, 0x00, 0x00, 0x00,
}
